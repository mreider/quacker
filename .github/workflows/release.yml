name: Create Release

on:
  workflow_dispatch:

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.19"

      - name: Get current version
        id: get_version
        run: |
          if gh release list | grep -q .; then
            latest=$(gh release list --limit 1 --json tagName -q '.[0].tagName')
            IFS='.' read -r major minor patch <<< "${latest#v}"
            echo "major=$major" >> $GITHUB_ENV
            echo "minor=$minor" >> $GITHUB_ENV
            echo "patch=$patch" >> $GITHUB_ENV
            next_version="v$major.$minor.$((patch+1))"
          else
            next_version="v0.1.0"
          fi
          echo "next_version=$next_version" >> $GITHUB_ENV
          echo "Version to be created: $next_version"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.next_version }}
          release_name: ${{ env.next_version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build binaries
        run: |
          GOOS=linux GOARCH=amd64 go build -o quacker-linux-amd64
          GOOS=linux GOARCH=arm64 go build -o quacker-linux-arm64
          GOOS=darwin GOARCH=amd64 go build -o quacker-darwin-amd64
          GOOS=darwin GOARCH=arm64 go build -o quacker-darwin-arm64
          GOOS=windows GOARCH=amd64 go build -o quacker-windows-amd64.exe

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./quacker-linux-amd64
          asset_name: quacker-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux ARM64 Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./quacker-linux-arm64
          asset_name: quacker-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload macOS AMD64 Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./quacker-darwin-amd64
          asset_name: quacker-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS ARM64 Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./quacker-darwin-arm64
          asset_name: quacker-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload Windows AMD64 Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./quacker-windows-amd64.exe
          asset_name: quacker-windows-amd64.exe
          asset_content_type: application/octet-stream
